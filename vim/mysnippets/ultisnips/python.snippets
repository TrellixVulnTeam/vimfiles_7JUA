snippet SCRIPT_PATH "get currrent script file path" b
SCRIPT_PATH = os.path.dirname(os.path.realpath(__file__))
endsnippet

snippet optparse "optparse template" b
import optparse

parser = optparse.OptionParser()
parser.add_option("-s", "--scan", action="store_true", dest="scan",
                  help="scan branches")
parser.add_option("-a", "--analyze", action="store_true", dest="analyze",
                  help="analyze dependencies")
parser.add_option("-c", "--conflict", action="store_true", dest="conflict",
                  help="analyze conflicts")
(options, args) = parser.parse_args()
endsnippet


snippet shell_run "shell run" b
import subprocess
def shell_run(command):
    p = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE,shell=True)
    out, err = p.communicate()
    retcode = p.poll()
    if retcode != 0:
        print "[ERROR] ", p.returncode, ' cmd: ', command
        print err
        return []

    return out.split('\n')
endsnippet


snippet mkdirs "mkdir recursively" b 
def mkdirs(path):
    try:
        os.makedirs(path)
    except OSError as exc:
        if exc.errno == errno.EEXIST and os.path.isdir(path):
            pass
endsnippet


snippet walk_dir "walk directory recursively" b
for root, dirs, files in os.walk(path):
    for file in files:
      filename = os.path.join(root, file)
      print filename

    for subdir in dirs:
      #os.path.join(root, subdir)
      pass
endsnippet
